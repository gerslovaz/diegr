% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animations.R
\name{animate_topo}
\alias{animate_topo}
\title{Topographic map animation in time}
\usage{
animate_topo(
  data,
  t_lim,
  mesh,
  coords = NULL,
  col_range = NULL,
  col_scale = NULL,
  legend = TRUE,
  contour = FALSE,
  output_path = NULL
)
}
\arguments{
\item{data}{An input data frame or tibble with required columns: \code{time} - the number of time point, \code{sensor} - the sensor label, \code{signal} - EEG signal value to plot.}

\item{t_lim}{Limits of time points (i.e., the length of the timeline displayed below the animation).}

\item{mesh}{A \code{"mesh"} object, data frame or matrix with x and y coordinates of a point mesh used for computing IM model. If not defined, the point mesh with default settings from \code{\link{point_mesh}} function is used.}

\item{coords}{Sensor coordinates as a tibble or data frame with named \code{x} and \code{y} columns of sensor coordinates and \code{sensor} column with sensor names. If not defined, the HCGSN256 template is used.}

\item{col_range}{A vector with minimum and maximum value of the amplitude used in the colour palette for plotting. If not defined, the range of input signal is used.}

\item{col_scale}{Optionally, a colour scale to be utilised for plotting. If not defined, it is computed from \code{col_range}.}

\item{legend}{Logical. Indicates, whether legend should be displayed beside the graph. Default value is \code{TRUE}.}

\item{contour}{Logical. Indicates, whether contours should be plotted in the graph. Default value is \code{FALSE}.}

\item{output_path}{File path where the animation will be saved (optional). If not defined, the animation is plotted in the RStudio Viewer.}
}
\value{
If \code{output_path} is \code{NULL}, the function prints the animation to the RStudio Viewer.
If \code{output_path} is specified, the animation is saved to the given file path and not displayed.
}
\description{
Topographic map animation in time
}
\examples{
\dontrun{
# This example may take a few seconds to render.
# Run only if you want to generate the full animation.
# Preparing a data structure:
s1e05 <- epochdata |> dplyr::filter(subject == 1 & epoch == 5 & time \%in\% c(10:20))
# Plot animation:
animate_topo(s1e05, t_lim = c(0,50))
}
}
