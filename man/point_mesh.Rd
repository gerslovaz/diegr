% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_mesh.R
\name{point_mesh}
\alias{point_mesh}
\title{Create regular mesh of points}
\usage{
point_mesh(
  dim = c(2, 3),
  n = 10000,
  r,
  template = NULL,
  own.coordinates = NULL,
  type = "circle"
)
}
\arguments{
\item{dim}{A number (or a vector) indicating a dimension of the mesh: 2 for two dimensional, 3 for three dimensional mesh and c(2,3) for both of them in one output (default setting).}

\item{n}{Optionally, the required number of mesh points. Default setting is n = 10 000.}

\item{r}{Optionally, desired radius of a circular mesh. If not defined, it is selected according to the sensor locations.}

\item{template}{The kind of sensor template montage used. Default setting 'HCGSN256' denotes the 256-channel HydroCel Geodesic Sensor Net v.1.0 (currently the only available option).}

\item{own.coordinates}{Optionally, a list with own sensor coordinates for mesh building, if no pre-defined template is to be used. See Details for more information.}

\item{type}{A character indicating the shape of the mesh with 2 possible values: 'circle' for circular mesh (default), 'polygon' for irregular polygon shape with boundaries defined by sensor locations.}
}
\value{
Returns an object of class \code{"mesh"}. It is a list containing some (or all) of the following components:

\item{D2}{A data frame with x and y coordinates of the created two dimensional point mesh.}
\item{D3}{A data frame with x, y and z coordinates of the created three dimensional point mesh.}
\item{template}{A character indicating the template of the sensor coordinates used for mesh computing.}
\item{r}{A radius of the circle used for mesh creating.}
}
\description{
Function creates an object of class \code{"mesh"}, which is a list of data.frames with coordinates of a regular (in the sense of the equidistant distance between mesh nodes) mesh of points on the space defined by sensor coordinates.
}
\details{
In the case of using Geodesic Sensor Net (\code{template = 'HCGSN256'}), the (0,0) point of the resulting 2D mesh corresponds to a reference electrode located at the vertex.

The number \code{n} for controlling the mesh density is only an approximate value. The final number of mesh nodes depends on the exact shape of the polygon (created as a convex hull of the sensor locations), and is only close to, not exactly equal to, the number \code{n}.

The \code{own.coordinates} enables computing a mesh from user's own sensor locations. The input must be a list containing following elements:
\itemize{
\item \code{D2} a tibble or data.frame with sensor coordinates in named x and y columns,
\item \code{D3} a tibble or data.frame with sensor coordinates in named x, y and z columns.
}
}
\examples{
data("HCGSN256")
# Computing circle 2D mesh with starting number 4000 points for HCGSN256 template
M <- point_mesh(dim = 2, n = 4000, template = "HCGSN256", type = 'circle')

# Computing polygon 3D mesh with starting number 2000 points for HCGSN256 template
M <- point_mesh(dim = 3, n = 2000, template = "HCGSN256", type = 'polygon')

# Computing coordinates of a polygon mesh in 2D and 3D in one step:
M <- point_mesh(dim = c(2,3), n = 2000, template = "HCGSN256", type = 'polygon')
}
\references{
EGI Geodesic Sensor Net Technical Manual (2024)
}
